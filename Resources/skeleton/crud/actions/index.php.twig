
    /**
     * Lists all {{ entity }} entities.
     *
{% if 'annotation' == format %}
     * @Route("/", name="{{ route_name_prefix }}")
     * @Method("GET")
     * @Template()
{% endif %}
     */
    public function indexAction(Request $request)
    {
        list($filterForm, $queryBuilder) = $this->filter($request);

        $entities = $this->paginator($request, $queryBuilder);

{% if 'annotation' == format %}
        return array(
            'entities' => $entities,
            'filterForm' => $filterForm->createView(),
        );
{% else %}
        return $this->render('{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:index.html.twig', array(
            'entities' => $entities,
            'filterForm' => $filterForm->createView(),
        ));
{% endif %}
    }

    /**
    * Create filter form and process filter request.
    * @param Request $request
    * @return array
    */
    protected function filter(Request $request)
    {
        $session = $request->getSession();
        $filterForm = $this->createForm(new {{ entity }}FilterType());
        $em = $this->getDoctrine()->getManager();
        $queryBuilder = $em->getRepository('{{ bundle }}:{{ entity }}')->createQueryBuilder('e');

        // Reset filter
        if ($request->get('filter_action') == 'reset') {
            $session->remove('{{ entity }}ControllerFilter');
        }

        // Filter action
        if ($request->get('filter_action') == 'filter') {
            // Bind values from the request
            $filterForm->bind($request);

            if ($filterForm->isValid()) {
                // Build the query from the given form object
                $this->get('lexik_form_filter.query_builder_updater')->addFilterConditions($filterForm, $queryBuilder);
                // Save filter to session
                $filterData = $filterForm->getData();
                $session->set('{{ entity }}ControllerFilter', $filterData);
            }
        } else {
            // Get filter from session
            if ($session->has('{{ entity }}ControllerFilter')) {
                $filterData = $session->get('{{ entity }}ControllerFilter');
                $filterForm = $this->createForm(new {{ entity }}FilterType(), $filterData);
                $this->get('lexik_form_filter.query_builder_updater')->addFilterConditions($filterForm, $queryBuilder);
            }
        }

        return array($filterForm, $queryBuilder);
    }

    /**
    * Get results from paginator and get paginator view.
    * @param Request $request
    * @param mixed $queryBuilder
    * @return \Knp\Component\Pager\Pagination\PaginationInterface
    */
    protected function paginator(Request $request, $queryBuilder)
    {
        $paginator  = $this->get('knp_paginator');
        $entities = $paginator->paginate(
            $queryBuilder,
            $request->query->getInt('page', 1),
            25
        );

        return $entities;
    }
